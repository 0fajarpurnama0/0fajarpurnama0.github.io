{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@ont-community/window-post-message-proxy\"","webpack:///external \"crypto-js\"","webpack:///external \"webextension-polyfill-ts\"","webpack:///external \"promise-timeout\"","webpack:///external \"base-x\"","webpack:///external \"typedarray-to-buffer\"","webpack:///./src/client/governance.ts","webpack:///./src/client/asset.ts","webpack:///./src/client/identity.ts","webpack:///./src/client/message.ts","webpack:///./src/client/network.ts","webpack:///./src/client/provider.ts","webpack:///./src/client/smartContract.ts","webpack:///./src/client/stateChannel.ts","webpack:///./src/client/utils.ts","webpack:///./src/client/index.ts","webpack:///./src/api/types.ts","webpack:///./src/rpc/tunnel.ts","webpack:///./src/rpc/rpc.ts","webpack:///./src/client/client.ts","webpack:///./src/provider.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","GovernanceApiImp","rpc","this","args","AssetApiImp","IdentityApiImp","MessageApiImp","NetworkApiImp","catch","Promise","reject","SmartContractApiImp","StateChannelApiImp","typedarrayToBuffer","base58","utilsApi","strToHex","str","ab2hexstring","buf","ArrayBuffer","length","bufView","Uint8Array","strLen","charCodeAt","str2ab","hex","hexstring2ab","String","fromCharCode","apply","Array","from","addressToHex","base58ToHex","hexToAddress","hexToBase58","_","base58Encoded","hexEncoded","decode","substr","Error","data","hash","sha256","checksum","slice","buffer","encode","Hex","parse","toString","result","push","parseInt","substring","arr","uint8Arr","byteLength","utils","asset","identity","message","network","provider","smartContract","stateChannel","governance","ExtensionType","TransactionType","VmType","Tunnel","options","source","destination","postMessage","messageHandler","logMessages","undefined","addListener","onMessage","msg","request","payload","type","console","warn","JSON","stringify","response","error","sender","promise","caller","id","url","resolve","e","then","tunnel","methods","Map","method","params","send","set","legacyDApi","registerClient","logWarnings","extension","Cyano","windowProxy","target","suppressWarnings","window","registerContentProxy","browser","addHandler","handle","runtime","sendMessage","test","registerProvider","checkedRegister","register","getAccount","getPublicKey","sendV2","getIdentity","getDDO","addAttributes","removeAttribute","addCredential","getCredentials","signMessage","verifyMessage","signMessageHash","verifyMessageHash","getAllowance","getAllowanceV2","getBalance","getBalanceV2","getBlock","getBlockHeight","getMerkleProof","getNetwork","getNodeCount","getStorage","getTransaction","isConnected","getUnboundOng","getContract","getSmartCodeEvent","getBlockHeightByTxHash","getBlockHash","getBlockTxsByHeight","getGasPrice","getGrantOng","getMempoolTxCount","getMempoolTxState","getVersion","invoke","invokeRead","deploy","invokeWasm","invokeWasmRead","getProvider","login","sign","stakePeers","redeemPeers","withdrawFeeReward","withdrawUnfrozenOnt","withdrawPeerUnboundOng","getAllPeerPool","getAttributes","getStakeInfo","getRewardFeeAmount"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"@ont-community/window-post-message-proxy\");","module.exports = require(\"crypto-js\");","module.exports = require(\"webextension-polyfill-ts\");","module.exports = require(\"promise-timeout\");","module.exports = require(\"base-x\");","module.exports = require(\"typedarray-to-buffer\");","import { PeerPoolItem, PeerAttributes, StakeInfo } from './../api/types';\nimport { GovernanceApi } from '../api/governance';\nimport { Rpc } from '../rpc/rpc';\n\nexport class GovernanceApiImp implements GovernanceApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  stakePeers(args: {\n    peerPubKeys: string[],\n    amounts: string[],\n    gasPrice?: string,\n    gasLimit?: string\n  }) {\n    return this.rpc.call<string>('governance.stakePeers', args);\n  }\n\n  redeemPeers(args: {\n    peerPubKeys: string[],\n    amounts: string[],\n    gasPrice?: string,\n    gasLimit?: string\n  }) {\n    return this.rpc.call<string>('governance.redeemPeers', args);\n  }\n\n  withdrawFeeReward(args: { gasPrice?: string, gasLimit?: string }) {\n    return this.rpc.call<string>('governance.withdrawFeeReward', args);\n  }\n\n  withdrawUnfrozenOnt(args: {\n    peerPubKeys: string[],\n    amounts: string[],\n    gasPrice?: string,\n    gasLimit?: string\n  }) {\n    return this.rpc.call<string>('governance.withdrawUnfrozenOnt', args);\n  }\n\n  withdrawPeerUnboundOng(args: { gasPrice?: string, gasLimit?: string }) {\n    return this.rpc.call<string>('governance.withdrawPeerUnboundOng', args);\n  }\n\n  getAllPeerPool() {\n    return this.rpc.call<PeerPoolItem[]>('governance.getAllPeerPool');\n  }\n\n  getAttributes(args: { peerPubKey: string }) {\n    return this.rpc.call<PeerAttributes>('governance.getAttributes', args);\n  }\n\n  getStakeInfo(args: { peerPubKey: string }) {\n    return this.rpc.call<StakeInfo>('governance.getStakeInfo', args);\n  }\n\n  getRewardFeeAmount() {\n    return this.rpc.call<string>('governance.getRewardFeeAmount');\n  }\n}\n","import { AssetApi } from '../api/asset';\nimport { Asset } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class AssetApiImp implements AssetApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  getAccount() {\n    return this.rpc.call<string>('asset.getAccount');\n  }\n\n  getPublicKey() {\n    return this.rpc.call<string>('asset.getPublicKey');\n  }\n\n  send(args: { to: string; asset: Asset; amount: string }) {\n    return this.rpc.call<string>('asset.send', args);\n  }\n\n  sendV2(args: { to: string; asset: Asset; amount: string }) {\n    return this.rpc.call<string>('asset.sendV2', args);\n  }\n}\n","import { IdentityApi } from '../api/identity';\nimport { OntIdAttribute, OntIdDDO } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class IdentityApiImp implements IdentityApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  getIdentity() {\n    return this.rpc.call<string>('identity.getIdentity');\n  }\n\n  getDDO(args: { identity: string }) {\n    return this.rpc.call<OntIdDDO>('identity.getDDO', args);\n  }\n\n  addAttributes(args: { attributes: OntIdAttribute[] }) {\n    return this.rpc.call<void>('identity.addAttributes', args);\n  }\n\n  removeAttribute(args: { key: string }) {\n    return this.rpc.call<void>('identity.removeAttribute', args);\n  }\n\n  addCredential(args: { tags: string[], credential: string }) {\n    return this.rpc.call<void>('identity.addCredential', args);\n  }\n\n  getCredentials() {\n    return this.rpc.call<Array<{ tags: string[], credential: string }>>('identity.getCredentials');\n  }\n}\n","import { MessageApi } from '../api/message';\nimport { Signature } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class MessageApiImp implements MessageApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  signMessageHash(args: { messageHash: string, useIdentity?: boolean }) {\n    return this.rpc.call<Signature>('message.signMessageHash', args);\n  }\n\n  verifyMessageHash(args: { messageHash: string; signature: Signature }) {\n    return this.rpc.call<boolean>('message.verifyMessageHash', args);\n  }\n\n  signMessage(args: { message: string, useIdentity?: boolean }) {\n    return this.rpc.call<Signature>('message.signMessage', args);\n  }\n\n  verifyMessage(args: { message: string; signature: Signature }) {\n    return this.rpc.call<boolean>('message.verifyMessage', args);\n  }\n}\n","import { NetworkApi } from '../api/network';\nimport { Asset, Balance, Block, BlockWithTxList, Contract, GasPrice, MerkleProof, Network, Transaction } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class NetworkApiImp implements NetworkApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  getNodeCount() {\n    return this.rpc.call<number>('network.getNodeCount');\n  }\n\n  getBlockHeight() {\n    return this.rpc.call<number>('network.getBlockHeight');\n  }\n\n  getMerkleProof(args: { txHash: string }) {\n    return this.rpc.call<MerkleProof>('network.getMerkleProof', args);\n  }\n\n  getStorage(args: { contract: string; key: string }) {\n    return this.rpc.call<string>('network.getStorage', args);\n  }\n\n  getAllowance(args: {\n    asset: Asset;\n    fromAddress: string;\n    toAddress: string;\n  }) {\n    return this.rpc.call<number>('network.getAllowance', args);\n  }\n\n  getAllowanceV2(args: {\n    asset: Asset;\n    fromAddress: string;\n    toAddress: string;\n  }) {\n    return this.rpc.call<number>('network.getAllowanceV2', args);\n  }\n\n  getBlock(args: { block: number | string }) {\n    return this.rpc.call<Block>('network.getBlock', args);\n  }\n\n  getTransaction(args: { txHash: string }) {\n    return this.rpc.call<Transaction>('network.getTransaction', args);\n  }\n\n  getNetwork() {\n    return this.rpc.call<Network>('network.getNetwork');\n  }\n\n  getBalance(args: { address: string }) {\n    return this.rpc.call<Balance>('network.getBalance', args);\n  }\n\n  getBalanceV2(args: { address: string }) {\n    return this.rpc.call<Balance>('network.getBalanceV2', args);\n  }\n\n  isConnected() {\n    return this.rpc.call<boolean>('network.isConnected');\n  }\n\n  getUnboundOng(args: { address: string }) {\n    return this.rpc.call<string>('network.getUnboundOng', args);\n  }\n\n  getContract(args: { hash: string }) {\n    return this.rpc.call<Contract>('network.getContract', args);\n  }\n\n  getSmartCodeEvent(args: { value: string | number }) {\n    return this.rpc.call<any>('network.getSmartCodeEvent', args);\n  }\n\n  getBlockHeightByTxHash(args: { hash: string }) {\n    return this.rpc.call<number>('network.getBlockHeightByTxHash', args);\n  }\n\n  getBlockHash(args: { height: number }) {\n    return this.rpc.call<string>('network.getBlockHash', args);\n  }\n\n  getBlockTxsByHeight(args: { height: number }) {\n    return this.rpc.call<BlockWithTxList>('network.getBlockTxsByHeight', args);\n  }\n\n  getGasPrice() {\n    return this.rpc.call<GasPrice>('network.getGasPrice');\n  }\n\n  getGrantOng(args: { address: string }) {\n    return this.rpc.call<string>('network.getGrantOng', args);\n  }\n\n  getMempoolTxCount() {\n    return this.rpc.call<number[]>('network.getMempoolTxCount');\n  }\n\n  getMempoolTxState(args: { hash: string }) {\n    return this.rpc.call<any>('network.getMempoolTxState', args);\n  }\n\n  getVersion() {\n    return this.rpc.call<string>('network.getVersion');\n  }\n}\n","import { timeout } from 'promise-timeout';\nimport { ProviderApi } from '../api/provider';\nimport { Provider } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class ProviderApiImp implements ProviderApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  getProvider() {\n    return timeout(this.rpc.call<Provider>('provider.getProvider'), 1000).catch(() => Promise.reject('NO_PROVIDER'));\n  }\n}\n","import { SmartContractApi } from '../api/smartContract';\nimport { Parameter, Response, VmType } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class SmartContractApiImp implements SmartContractApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  invoke(args: {\n    scriptHash: string;\n    operation: string;\n    args?: Parameter[];\n    gasPrice?: number;\n    gasLimit?: number;\n    requireIdentity?: boolean;\n  }) {\n    return this.rpc.call<Response>('smartContract.invoke', args);\n  }\n\n  invokeRead(args: {\n    scriptHash: string;\n    operation: string;\n    args?: Parameter[];\n  }): Promise<any> {\n    return this.rpc.call<void>('smartContract.invokeRead', args);\n  }\n\n  deploy(args: {\n    code: string;\n    name?: string;\n    version?: string;\n    author?: string;\n    email?: string;\n    description?: string;\n    vmType?: boolean | VmType;\n    gasPrice?: number;\n    gasLimit?: number;\n  }): Promise<void> {\n    return this.rpc.call<void>('smartContract.deploy', args);\n  }\n\n  invokeWasm(args: {\n    scriptHash: string;\n    operation: string;\n    args?: Parameter[];\n    gasPrice?: number;\n    gasLimit?: number;\n    requireIdentity?: boolean;\n  }) {\n    return this.rpc.call<Response>('smartContract.invokeWasm', args);\n  }\n\n  invokeWasmRead(args: {\n    scriptHash: string;\n    operation: string;\n    args?: Parameter[];\n  }): Promise<any> {\n    return this.rpc.call<void>('smartContract.invokeWasmRead', args);\n  }\n}\n","import { StateChannelApi } from '../api/stateChannel';\nimport { Signature } from '../api/types';\nimport { Rpc } from '../rpc/rpc';\n\nexport class StateChannelApiImp implements StateChannelApi {\n  private rpc: Rpc;\n\n  constructor(rpc: Rpc) {\n    this.rpc = rpc;\n  }\n\n  login() {\n    return this.rpc.call<string>('stateChannel.login');\n  }\n\n  sign(args: {\n    channelId: string,\n    scriptHash: string,\n    message: string\n  }) {\n    return this.rpc.call<Signature>('stateChannel.sign', args);\n  }\n}\n","import * as baseX from 'base-x';\nimport * as cryptoJS from 'crypto-js';\n\n// tslint:disable-next-line: no-var-requires\nconst typedarrayToBuffer = require('typedarray-to-buffer');\n\nimport { UtilsApi } from '../api/utils';\n\nconst base58 = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nexport const utilsApi: UtilsApi = {\n  strToHex(str: string) {\n    return ab2hexstring(str2ab(str));\n  },\n\n  hexToStr(hex: string) {\n    return ab2str(hexstring2ab(hex));\n  },\n\n  addressToHex(str: string) {\n    return base58ToHex(str);\n  },\n\n  hexToAddress(str: string) {\n    return hexToBase58(str);\n  },\n\n  isAddress(str: string) {\n    try {\n      base58ToHex(str);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n};\n\nfunction base58ToHex(base58Encoded: string) {\n  const decoded = base58.decode(base58Encoded);\n  const hexEncoded = ab2hexstring(decoded).substr(2, 40);\n\n  if (base58Encoded !== hexToBase58(hexEncoded)) {\n    throw new Error('[addressToU160] decode encoded verify failed');\n  }\n  return hexEncoded;\n}\n\nconst ADDR_VERSION = '17';\n\nfunction hexToBase58(hexEncoded: string): string {\n  const data = ADDR_VERSION + hexEncoded;\n\n  const hash = sha256(data);\n  const hash2 = sha256(hash);\n  const checksum = hash2.slice(0, 8);\n\n  const datas = data + checksum;\n\n  const buffer = typedarrayToBuffer(new Uint8Array(hexstring2ab(datas)));\n\n  return base58.encode(buffer);\n}\n\nfunction sha256(data: string) {\n  const hex = cryptoJS.enc.Hex.parse(data);\n  const sha = cryptoJS.SHA256(hex).toString();\n  return sha;\n}\n\nfunction hexstring2ab(str: string): number[] {\n  const result = [];\n\n  while (str.length >= 2) {\n    result.push(parseInt(str.substring(0, 2), 16));\n    str = str.substring(2, str.length);\n  }\n\n  return result;\n}\n\nfunction ab2hexstring(arr: any): string {\n  let result: string = '';\n  const uint8Arr: Uint8Array = new Uint8Array(arr);\n  for (let i = 0; i < uint8Arr.byteLength; i++) {\n    let str = uint8Arr[i].toString(16);\n    str = str.length === 0 ? '00' : str.length === 1 ? '0' + str : str;\n    result += str;\n  }\n  return result;\n}\n\nfunction ab2str(buf: ArrayBuffer | number[]): string {\n  return String.fromCharCode.apply(null, Array.from(new Uint8Array(buf)));\n}\n\nexport function str2ab(str: string) {\n  const buf = new ArrayBuffer(str.length);\n  const bufView = new Uint8Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n","import { GovernanceApiImp } from './governance';\nimport { GovernanceApi } from './../api/governance';\nimport { DApi } from '../api';\nimport { AssetApi } from '../api/asset';\nimport { IdentityApi } from '../api/identity';\nimport { MessageApi } from '../api/message';\nimport { NetworkApi } from '../api/network';\nimport { ProviderApi } from '../api/provider';\nimport { SmartContractApi } from '../api/smartContract';\nimport { StateChannelApi } from '../api/stateChannel';\nimport { Rpc } from '../rpc/rpc';\nimport { AssetApiImp } from './asset';\nimport { IdentityApiImp } from './identity';\nimport { MessageApiImp } from './message';\nimport { NetworkApiImp } from './network';\nimport { ProviderApiImp } from './provider';\nimport { SmartContractApiImp } from './smartContract';\nimport { StateChannelApiImp } from './stateChannel';\nimport { utilsApi } from './utils';\n\nexport class DApiImp implements DApi {\n  asset: AssetApi;\n  identity: IdentityApi;\n  message: MessageApi;\n  network: NetworkApi;\n  provider: ProviderApi;\n  smartContract: SmartContractApi;\n  stateChannel: StateChannelApi;\n  utils = utilsApi;\n  governance: GovernanceApi;\n\n  constructor(rpc: Rpc) {\n    this.asset = new AssetApiImp(rpc);\n    this.identity = new IdentityApiImp(rpc);\n    this.message = new MessageApiImp(rpc);\n    this.network = new NetworkApiImp(rpc);\n    this.provider = new ProviderApiImp(rpc);\n    this.smartContract = new SmartContractApiImp(rpc);\n    this.stateChannel = new StateChannelApiImp(rpc);\n    this.governance = new GovernanceApiImp(rpc);\n  }\n}\n","export enum ExtensionType {\n  Cyano = 'cyano',\n  Onto = 'onto'\n}\n\nexport type NetworkType = 'MAIN' | 'TEST' | 'PRIVATE';\n\nexport type Asset = 'ONT' | 'ONG' | string;\n\nexport enum TransactionType {\n  BookKeeper = 2,\n  Claim = 3,\n  Deploy = 208,\n  Invoke = 209,\n  Enrollment = 4,\n  Vote = 5\n}\n\nexport enum VmType  {\n    NEOVM_TYPE = 1,\n    WASMVM_TYPE = 3\n}\n\nexport type EventListener = (data: any) => void;\n\n// tslint:disable-next-line:max-line-length\nexport type ParameterType = 'Boolean' | 'Integer' | 'ByteArray' | 'Struct' | 'Map' | 'String' | 'Array' | 'Address' | 'Long';\n\nexport interface Parameter {\n  type: ParameterType;\n  value: any;\n}\n\nexport interface BlockHeader {\n  Version: number;\n  PrevBlockHash: string;\n  TransactionsRoot: string;\n  BlockRoot: string;\n  Timestamp: number;\n  Height: number;\n  ConsensusData: number;\n  ConsensusPayload: string;\n  NextBookkeeper: string;\n  Bookkeepers: string[];\n  SigData: string[];\n  Hash: string;\n}\n\nexport interface Block {\n  Hash: string;\n  Size: number;\n  Header: BlockHeader;\n  Transactions: Transaction[];\n}\n\nexport interface TxSignature {\n  PubKeys: string[];\n  M: number;\n  SigData: string[];\n}\n\nexport interface Transaction {\n  Version: number;\n  Nonce: number;\n  GasPrice: number;\n  GasLimit: number;\n  Payer: string;\n  TxType: TransactionType;\n  Payload: any;\n  Attributes: any[];\n  Sigs: TxSignature[];\n  Hash: string;\n  Height: number;\n}\n\nexport interface MerkleProof {\n  Type: string;\n  TransactionsRoot: string;\n  BlockHeight: number;\n  CurBlockRoot: string;\n  CurBlockHeight: number;\n  TargetHashes: string[];\n}\n\nexport interface Balance {\n  ONT: string;\n  ONG: string;\n\n  [key: string]: string;\n}\n\nexport interface OntIdAttribute {\n  key: string;\n  type: string;\n  value: string;\n}\n\nexport interface OntIdDDO {\n  attributes: OntIdAttribute[];\n}\n\nexport interface Provider {\n  name: string;\n  version: string;\n  compatibility: string[];\n}\n\nexport interface Network {\n  type: NetworkType;\n  address: string;\n}\n\nexport type Result = string[];\n\nexport interface Response {\n  transaction: string;\n  results: Result[];\n}\n\nexport interface Signature {\n  publicKey: string;\n  data: string;\n}\n\nexport interface Contract {\n  Code: string;\n  NeedStorage: boolean;\n  Name: string;\n  CodeVersion: string;\n  Author: string;\n  Email: string;\n  Description: string;\n}\n\nexport interface BlockWithTxList {\n  Hash: string;\n  Height: number;\n  Transactions: string[];\n}\n\nexport interface GasPrice {\n  gasPrice: number;\n  height: number;\n}\n\nexport interface MessageRecord {\n  tags: string[];\n  message: string;\n}\n\nexport interface PeerPoolItem {\n  index: number;\n  peerPubKey: string;\n  address: string;\n  status: number;\n  initPos: number;\n  totalPos: number;\n}\n\nexport interface PeerAttributes {\n  peerPubKey: string;\n  maxAuthorize: string;\n  t2PeerCost: number; // peer cost, active in view T + 2\n  t1PeerCost: number; // peer cost, active in view T + 1\n  tPeerCost: number; // peer cost, active in view T\n  t2StakeCost: number;\n  t1StakeCost: number;\n  tStakeCost: number;\n  field4: string;\n}\n\nexport interface StakeInfo {\n  peerPubKey: string;\n  address: string;\n  consensusPos: number;\n  freezePos: number;\n  newPos: number;\n  withdrawPos: number;\n  withdrawFreezePos: number;\n  withdrawUnfreezePos: number;\n}\n","import { Runtime } from 'webextension-polyfill-ts';\n\nexport type CallbackType = (msg: Request, caller: Caller) => Promise<Response> | void;\nexport type PostMessageType = (msg: Request) => Promise<Response>;\n\nexport type AddListenerType = (callback: CallbackType) => void;\n\nexport interface Caller {\n  url?: string;\n  id?: string;\n}\n\nexport type MessageHandlerType = (msg: any, caller: Caller) => any;\n\nexport interface Request {\n  payload: any;\n  source: string;\n  destination: string;\n  type: 'dAPI.js';\n}\n\nexport interface Response<TYPE = any> {\n  destination: string;\n  error?: any;\n  payload?: TYPE;\n  source: string;\n  type: 'dAPI.js';\n}\n\nexport interface TunnelOptions {\n  source: string;\n  destination: string;\n  postMessage?: PostMessageType;\n  addListener?: AddListenerType;\n  messageHandler?: MessageHandlerType;\n  logMessages?: boolean;\n}\n\nexport class Tunnel<T = any> {\n  private source: string;\n  private destination: string;\n  private postMessage?: PostMessageType;\n  private messageHandler?: MessageHandlerType;\n\n  private logMessages?: boolean;\n\n  constructor(options: TunnelOptions) {\n    this.source = options.source;\n    this.destination = options.destination;\n    this.postMessage = options.postMessage;\n    this.messageHandler = options.messageHandler;\n    this.logMessages = options.logMessages;\n\n    if (options.addListener === undefined && options.postMessage === undefined) {\n      throw new Error('Either addListener or postMessage must be present.');\n    } else if (options.addListener !== undefined) {\n      if (options.messageHandler === undefined) {\n        throw new Error('MessageHandler must be specified if addListener present.');\n      }\n\n      options.addListener(this.onMessage.bind(this));\n    }\n  }\n\n  async send<RESULT>(msg: T): Promise<RESULT> {\n    const request: Request = {\n      destination: this.destination,\n      payload: msg,\n      source: this.source,\n      type: 'dAPI.js'\n    };\n\n    if (this.postMessage === undefined) {\n      throw new Error('PostMessage was not specified.');\n    }\n\n    if (this.logMessages) {\n      // tslint:disable-next-line:max-line-length\n      // tslint:disable-next-line:no-console\n      console.warn(`Tunnel: (${this.source}): Sending`, JSON.stringify(msg, null, '  '));\n    }\n\n    const response: Response<RESULT> = await this.postMessage(request);\n\n    if (response.error !== undefined) {\n      throw new Error(response.error);\n    } else {\n      return response.payload as RESULT;\n    }\n  }\n\n  private onMessage(request: Request, sender: Runtime.MessageSender): Promise<Response> | void {\n    if (request.destination === this.source && request.source === this.destination) {\n      let promise: Promise<any>;\n\n      try {\n        if (this.messageHandler === undefined) {\n          throw new Error('MessageHandler was not specified.');\n        }\n\n        if (this.logMessages) {\n          // tslint:disable-next-line:max-line-length\n          // tslint:disable-next-line:no-console\n          console.warn(`Tunnel: (${this.source}): Receiving`, JSON.stringify(request.payload, null, '  '));\n        }\n\n        const caller: Caller = {\n          id: sender.id,\n          url: sender.url\n        };\n\n        const response = this.messageHandler(request.payload, caller);\n        promise = Promise.resolve(response);\n      } catch (e) {\n        promise = Promise.reject(e);\n      }\n\n      return promise\n        .then(\n          (result) =>\n            ({\n              destination: request.source,\n              payload: result,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        )\n        .catch(\n          (error) =>\n            ({\n              destination: request.source,\n              error,\n              source: request.destination,\n              type: 'dAPI.js'\n            } as Response)\n        );\n    }\n  }\n}\n","import { Caller, Tunnel, TunnelOptions } from './tunnel';\n\nexport type MethodType = (...params: any[]) => any;\n\ninterface MethodCallType {\n  method: string;\n  params: any[];\n}\n\nexport class Rpc {\n  private tunnel: Tunnel<MethodCallType>;\n  private methods: Map<string, MethodType>;\n\n  constructor(options: TunnelOptions) {\n    options.messageHandler = this.messageHandler.bind(this);\n\n    this.tunnel = new Tunnel(options);\n    this.methods = new Map();\n  }\n\n  call<RESULT = any>(method: string, ...params: any[]) {\n    const msg = {\n      method,\n      params\n    };\n\n    return this.tunnel.send<RESULT>(msg);\n  }\n\n  register(name: string, method: MethodType) {\n    this.methods.set(name, method);\n  }\n\n  private messageHandler(msg: MethodCallType, caller: Caller) {\n    const method = this.methods.get(msg.method);\n\n    if (method === undefined) {\n      throw new Error('Unregistered method call: ' + msg.method);\n    }\n\n    return method.call(caller, ...msg.params);\n  }\n}\n","import { WindowPostMessageProxy } from '@ont-community/window-post-message-proxy';\nimport { DApiImp } from '.';\nimport { DApi, ExtensionType } from '../api';\nimport { Rpc } from '../rpc/rpc';\n\nlet legacyDApi: DApi;\n\ninterface RegisterClientParams {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n  extension?: ExtensionType;\n}\n\nfunction registerClient({\n  logMessages = false,\n  logWarnings = false,\n  extension = ExtensionType.Cyano\n}: RegisterClientParams): DApi {\n  const windowProxy = new WindowPostMessageProxy({\n    name: 'page',\n    target: extension === ExtensionType.Cyano ? 'content-script' : `content-script-${extension}`,\n    logMessages,\n    suppressWarnings: !logWarnings\n  });\n  const rpc = new Rpc({\n    source: 'page',\n    destination: 'background',\n    logMessages: false,\n    postMessage: (msg) => windowProxy.postMessage(window, msg)\n  });\n  legacyDApi = new DApiImp(rpc);\n  return legacyDApi;\n}\n\nexport { legacyDApi as api, registerClient };\n","import { WindowPostMessageProxy } from '@ont-community/window-post-message-proxy';\nimport { DApi, ExtensionType } from './api';\nimport { MethodType, Rpc } from './rpc/rpc';\n\nlet rpc: Rpc;\n\ninterface RegisterContentProxyParams {\n  logMessages?: boolean;\n  logWarnings?: boolean;\n  extension?: ExtensionType;\n}\n\nexport function registerContentProxy({\n  logMessages = false,\n  logWarnings = false,\n  extension = ExtensionType.Cyano\n}: RegisterContentProxyParams) {\n  const { browser } = require('webextension-polyfill-ts');\n  const windowPostMessageProxy = new WindowPostMessageProxy({\n    logMessages,\n    suppressWarnings: !logWarnings,\n    name: extension === ExtensionType.Cyano ? 'content-script' : `content-script-${extension}`,\n    target: 'page'\n  });\n\n  windowPostMessageProxy.addHandler({\n    handle: (msg) => browser.runtime.sendMessage(msg),\n    test: (msg) => msg.type === 'dAPI.js' && msg.source === 'page'\n  });\n}\n\nexport function registerProvider({ provider, logMessages }: { provider: DApi; logMessages: boolean }) {\n  const { browser } = require('webextension-polyfill-ts');\n  rpc = new Rpc({\n    source: 'background',\n    destination: 'page',\n    logMessages,\n    addListener: browser.runtime.onMessage.addListener\n  });\n\n  function checkedRegister(name: string, method: MethodType | undefined) {\n    if (method === undefined) {\n      throw new Error('DApi provider does not implement ' + name);\n    }\n\n    rpc.register(name, method);\n  }\n\n  checkedRegister('asset.getAccount', provider.asset.getAccount);\n  checkedRegister('asset.getPublicKey', provider.asset.getPublicKey);\n  checkedRegister('asset.send', provider.asset.send);\n  checkedRegister('asset.sendV2', provider.asset.sendV2);\n\n  checkedRegister('identity.getIdentity', provider.identity.getIdentity);\n  checkedRegister('identity.getDDO', provider.identity.getDDO);\n  checkedRegister('identity.addAttributes', provider.identity.addAttributes);\n  checkedRegister('identity.removeAttribute', provider.identity.removeAttribute);\n  checkedRegister('identity.addCredential', provider.identity.addCredential);\n  checkedRegister('identity.getCredentials', provider.identity.getCredentials);\n\n  checkedRegister('message.signMessage', provider.message.signMessage);\n  checkedRegister('message.verifyMessage', provider.message.verifyMessage);\n  checkedRegister('message.signMessageHash', provider.message.signMessageHash);\n  checkedRegister('message.verifyMessageHash', provider.message.verifyMessageHash);\n\n  checkedRegister('network.getAllowance', provider.network.getAllowance);\n  checkedRegister('network.getAllowanceV2', provider.network.getAllowanceV2);\n  checkedRegister('network.getBalance', provider.network.getBalance);\n  checkedRegister('network.getBalanceV2', provider.network.getBalanceV2);\n  checkedRegister('network.getBlock', provider.network.getBlock);\n  checkedRegister('network.getBlockHeight', provider.network.getBlockHeight);\n  checkedRegister('network.getMerkleProof', provider.network.getMerkleProof);\n  checkedRegister('network.getNetwork', provider.network.getNetwork);\n  checkedRegister('network.getNodeCount', provider.network.getNodeCount);\n  checkedRegister('network.getStorage', provider.network.getStorage);\n  checkedRegister('network.getTransaction', provider.network.getTransaction);\n  checkedRegister('network.isConnected', provider.network.isConnected);\n\n  checkedRegister('network.getUnboundOng', provider.network.getUnboundOng);\n  checkedRegister('network.getContract', provider.network.getContract);\n  checkedRegister('network.getSmartCodeEvent', provider.network.getSmartCodeEvent);\n  checkedRegister('network.getBlockHeightByTxHash', provider.network.getBlockHeightByTxHash);\n  checkedRegister('network.getBlockHash', provider.network.getBlockHash);\n  checkedRegister('network.getBlockTxsByHeight', provider.network.getBlockTxsByHeight);\n  checkedRegister('network.getGasPrice', provider.network.getGasPrice);\n  checkedRegister('network.getGrantOng', provider.network.getGrantOng);\n  checkedRegister('network.getMempoolTxCount', provider.network.getMempoolTxCount);\n  checkedRegister('network.getMempoolTxState', provider.network.getMempoolTxState);\n  checkedRegister('network.getVersion', provider.network.getVersion);\n\n  checkedRegister('smartContract.invoke', provider.smartContract.invoke);\n  checkedRegister('smartContract.invokeRead', provider.smartContract.invokeRead);\n  checkedRegister('smartContract.deploy', provider.smartContract.deploy);\n  checkedRegister('smartContract.invokeWasm', provider.smartContract.invokeWasm);\n  checkedRegister('smartContract.invokeWasmRead', provider.smartContract.invokeWasmRead);\n\n  checkedRegister('provider.getProvider', provider.provider.getProvider);\n\n  checkedRegister('stateChannel.login', provider.stateChannel.login);\n  checkedRegister('stateChannel.sign', provider.stateChannel.sign);\n\n  checkedRegister('governance.stakePeers', provider.governance.stakePeers);\n  checkedRegister('governance.redeemPeers', provider.governance.redeemPeers);\n  checkedRegister('governance.withdrawFeeReward', provider.governance.withdrawFeeReward);\n  checkedRegister('governance.withdrawUnfrozenOnt', provider.governance.withdrawUnfrozenOnt);\n  checkedRegister('governance.withdrawPeerUnboundOng', provider.governance.withdrawPeerUnboundOng);\n  checkedRegister('governance.getAllPeerPool', provider.governance.getAllPeerPool);\n  checkedRegister('governance.getAttributes', provider.governance.getAttributes);\n  checkedRegister('governance.getStakeInfo', provider.governance.getStakeInfo);\n  checkedRegister('governance.getRewardFeeAmount', provider.governance.getRewardFeeAmount);\n}\n"],"sourceRoot":""}